/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Social, SocialInterface } from "../Social";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tipAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "author",
        type: "address",
      },
    ],
    name: "PostTipped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "postTxt",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "postImg",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tipAmount",
        type: "uint256",
      },
    ],
    name: "postCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "postTxt",
        type: "string",
      },
      {
        internalType: "string",
        name: "postImg",
        type: "string",
      },
    ],
    name: "addPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "buyMeCoffee",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllPost",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "postTxt",
            type: "string",
          },
          {
            internalType: "string",
            name: "postImg",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "tipAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Social.Post[]",
        name: "_posts",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyPost",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "postTxt",
            type: "string",
          },
          {
            internalType: "string",
            name: "postImg",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "tipAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Social.Post[]",
        name: "_posts",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "profiles",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506000600181905580546001600160a01b03191633179055610db0806100376000396000f3fe6080604052600436106100555760003560e01c80636fefacb21461005a5780638da5cb5b146100855780638eed0103146100bd578063b02c6516146100d2578063bbe15627146100f2578063da7d9d101461012d575b600080fd5b34801561006657600080fd5b5061006f610142565b60405161007c9190610a58565b60405180910390f35b34801561009157600080fd5b506000546100a5906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b6100d06100cb366004610b0a565b6103ba565b005b3480156100de57600080fd5b506100d06100ed366004610bc6565b610692565b3480156100fe57600080fd5b5061011f61010d366004610c2a565b60036020526000908152604090205481565b60405190815260200161007c565b34801561013957600080fd5b5061006f610746565b60606000805b600154811015610191576000818152600260205260409020546001600160a01b031633141561017f5761017c600183610c70565b91505b8061018981610c88565b915050610148565b508067ffffffffffffffff8111156101ab576101ab610b23565b6040519080825280602002602001820160405280156101e457816020015b6101d1610943565b8152602001906001900390816101c95790505b5091506000805b6001548110156103b4576000818152600260205260409020546001600160a01b03163314156103a257600081815260026020818152604092839020835160a08101855281546001600160a01b031681526001820154928101929092529182018054919384019161025a90610ca3565b80601f016020809104026020016040519081016040528092919081815260200182805461028690610ca3565b80156102d35780601f106102a8576101008083540402835291602001916102d3565b820191906000526020600020905b8154815290600101906020018083116102b657829003601f168201915b505050505081526020016003820180546102ec90610ca3565b80601f016020809104026020016040519081016040528092919081815260200182805461031890610ca3565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b5050505050815260200160048201548152505084838061038490610c88565b94508151811061039657610396610cde565b60200260200101819052505b806103ac81610c88565b9150506101eb565b50505090565b6000818152600260208181526040808420815160a08101835281546001600160a01b0316815260018201549381019390935292830180549293929184019161040190610ca3565b80601f016020809104026020016040519081016040528092919081815260200182805461042d90610ca3565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b5050505050815260200160038201805461049390610ca3565b80601f01602080910402602001604051908101604052809291908181526020018280546104bf90610ca3565b801561050c5780601f106104e15761010080835404028352916020019161050c565b820191906000526020600020905b8154815290600101906020018083116104ef57829003601f168201915b50505091835250506004919091015460209091015280519091506001600160a01b03163314156105825760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f742070617920796f7572206f776e20706f73740000000000000000604482015260640160405180910390fd5b80516040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156105ba573d6000803e3d6000fd5b506001816080018181516105ce9190610c70565b905250600082815260026020818152604092839020845181546001600160a01b0319166001600160a01b039091161781558482015160018201559284015180518594936106209390850192019061097b565b506060820151805161063c91600384019160209091019061097b565b5060809182015160049091015560408083015191830151835191517f20988fe475351e75813672abada1dddb7ac67cbbeb81e61e1160b8329d8cdf1c936106869387939192610cf4565b60405180910390a15050565b6001546000908152600260208181526040909220845190926106ba928401919086019061097b565b5081516106d0906003830190602085019061097b565b5080546001600160a01b031916339081178255600180549083018190556040517f7c6a7d5165ee4647e73878b534dc5e8da6063760540032c917c31fb7365fc7409261072492909187908790600090610d2e565b60405180910390a16001805490600061073c83610c88565b9190505550505050565b606060015467ffffffffffffffff81111561076357610763610b23565b60405190808252806020026020018201604052801561079c57816020015b610789610943565b8152602001906001900390816107815790505b50905060005b815181101561093f57600081815260026020818152604092839020835160a08101855281546001600160a01b03168152600182015492810192909252918201805491938401916107f190610ca3565b80601f016020809104026020016040519081016040528092919081815260200182805461081d90610ca3565b801561086a5780601f1061083f5761010080835404028352916020019161086a565b820191906000526020600020905b81548152906001019060200180831161084d57829003601f168201915b5050505050815260200160038201805461088390610ca3565b80601f01602080910402602001604051908101604052809291908181526020018280546108af90610ca3565b80156108fc5780601f106108d1576101008083540402835291602001916108fc565b820191906000526020600020905b8154815290600101906020018083116108df57829003601f168201915b5050505050815260200160048201548152505082828151811061092157610921610cde565b6020026020010181905250808061093790610c88565b9150506107a2565b5090565b6040518060a0016040528060006001600160a01b03168152602001600081526020016060815260200160608152602001600081525090565b82805461098790610ca3565b90600052602060002090601f0160209004810192826109a957600085556109ef565b82601f106109c257805160ff19168380011785556109ef565b828001600101855582156109ef579182015b828111156109ef5782518255916020019190600101906109d4565b5061093f9291505b8082111561093f57600081556001016109f7565b6000815180845260005b81811015610a3157602081850181015186830182015201610a15565b81811115610a43576000602083870101525b50601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610afc57888303603f19018552815180516001600160a01b0316845287810151888501528681015160a088860181905290610ac082870182610a0b565b91505060608083015186830382880152610ada8382610a0b565b6080948501519790940196909652505094870194925090860190600101610a7f565b509098975050505050505050565b600060208284031215610b1c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b4a57600080fd5b813567ffffffffffffffff80821115610b6557610b65610b23565b604051601f8301601f19908116603f01168101908282118183101715610b8d57610b8d610b23565b81604052838152866020858801011115610ba657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610bd957600080fd5b823567ffffffffffffffff80821115610bf157600080fd5b610bfd86838701610b39565b93506020850135915080821115610c1357600080fd5b50610c2085828601610b39565b9150509250929050565b600060208284031215610c3c57600080fd5b81356001600160a01b0381168114610c5357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c8357610c83610c5a565b500190565b6000600019821415610c9c57610c9c610c5a565b5060010190565b600181811c90821680610cb757607f821691505b60208210811415610cd857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b848152608060208201526000610d0d6080830186610a0b565b6040830194909452506001600160a01b039190911660609091015292915050565b60018060a01b038616815284602082015260a060408201526000610d5560a0830186610a0b565b8281036060840152610d678186610a0b565b915050826080830152969550505050505056fea2646970667358221220b8f67516dc7de7837a4525952a49889420303e206e32681c51ae87cffd3af52464736f6c634300080b0033";

type SocialConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SocialConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Social__factory extends ContractFactory {
  constructor(...args: SocialConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Social & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Social__factory {
    return super.connect(runner) as Social__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SocialInterface {
    return new Interface(_abi) as SocialInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Social {
    return new Contract(address, _abi, runner) as unknown as Social;
  }
}
